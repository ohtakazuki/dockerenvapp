{
  "name": "PHP Basic Project (with Xdebug)",
  // compose.yml ファイルへの相対パス (devcontainer.json と同じディレクトリにある)
  "dockerComposeFile": "compose.yml",
  // compose.yml 内で使用するサービス名
  "service": "php",
  // VS Code を開いた際のコンテナ内のワークスペースフォルダ
  "workspaceFolder": "/app", // Dockerfile の WORKDIR, compose.yml の volume mount 先と一致
  // コンテナ内で VS Code サーバーやターミナルを実行するユーザー
  "remoteUser": "appuser", // Dockerfile で作成した非rootユーザー

  // VS Code のカスタマイズ設定
  "customizations": {
    "vscode": {
      // コンテナ内で有効にする VS Code 拡張機能
      "extensions": [
        "bmewburn.vscode-intelephense-client", // PHP IntelliSense
        "DEVSENSE.phptools-vscode",          // PHP Tools (デバッグ機能も含むが、専用拡張も推奨)
        "xdebug.php-debug"                   // PHP Xdebug (デバッグ専用拡張機能)
        // (任意) 他に推奨される拡張機能を追加:
        // "ms-azuretools.vscode-docker"
      ],
      // コンテナ内での VS Code 設定
      "settings": {
        "editor.tabSize": 4, // PHP推奨のタブサイズ (PSR準拠など)
        "php.validate.executablePath": "/usr/local/bin/php", // PHP実行ファイルのパス
        // Intelephense の設定例
        // "intelephense.environment.phpVersion": "8.3", // プロジェクトのPHPバージョン指定
        // フォーマッタ (phpcs, phpcbf, php-cs-fixer など) の設定を追加可能

        // PHP Debug 拡張機能 (xdebug.php-debug) 用の設定例
        "php.debug.executablePath": "/usr/local/bin/php",
        // "php.debug.log": true, // デバッグアダプタのログを有効化 (問題発生時)
        "php.debug.ideKey": "VSCODE" // Xdebug設定と合わせる (任意)
      }
    }
  },
  // ポートフォワーディング設定: コンテナのポート8000をホストに公開 (Webサーバー用)
  "forwardPorts": [8000],

  // コンテナ作成後に composer install を実行するコマンドを追加
  // これにより、マウント後に依存関係がインストールされる
  "postCreateCommand": "composer install --no-interaction --optimize-autoloader",

  // (任意) コンテナ起動時のコマンド実行
  // "postStartCommand": "echo 'Dev Container Started!'"
}